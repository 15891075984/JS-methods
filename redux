// reducer.js
const initState = {
    count: 0
}
export const reducer = (state = initState, action) => {
    switch (action.type) {
        case 'plus':
            return {
                ...state,
                count: state.count + 1
            }
        default:
            return initState
    }
}


// createStore.js
import { reducer } from './reducer'
export const createStore = (reducer) => {
    let currentState = {}
    let observers = []
    function getState () {
        return currentState
    }
    function dispatch (action) {
        currentState = reducer(currentState, action)
        observers.forEach(fn => fn())
    }
    dispatch({type:'gsjhgjhsd'})
    function subscribe (fn) {
        observers.push(fn)
    }

    return { getState, dispatch, subscribe }
}



//使用
import { createStore } from '../redux/store'
import {reducer} from '../redux/reducer'
created () {
  let count = 1
  const store = createStore(reducer)
  const update = () => { count ++ ;console.log(count + '收到')}
  store.subscribe(update)
  store.subscribe(update)
  store.subscribe(update)
  store.dispatch({type:'plus'})
}
